{"version":3,"sources":["components/Header/Header.module.css","components/Login/Login.module.css","components/Profile/My_Posts/MyPosts.module.css","assets/Images/loading.svg","assets/Images/logo2.png","components/Profile/My_Posts/Post/Post.module.css","components/Profile/Profile_info/ProfileInfo.module.css","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","common/Preloader.js","HOC/withAuthRedirect.js","redux/dialogs-reducer.js","common/FormsControls/FormsControls.jsx","utils/validators/validators.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","api/api.js","utils/object-helpers.js","redux/friends-reducer.js","components/Pagination/Pagination.jsx","components/Friends/Friend.jsx","components/Friends/Friends.jsx","redux/friends-selectors.js","components/Friends/FriendsContainer.jsx","redux/auth-reducer.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/Navbar/Navbar.jsx","redux/profile-reducer.js","components/Profile/My_Posts/Post/Post.jsx","components/Profile/My_Posts/MyPosts.jsx","components/Profile/My_Posts/MyPostsContainer.jsx","components/Profile/Profile_info/ProfileStatusWithHooks.jsx","components/Profile/Profile_info/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Timetable/Timetable.jsx","redux/app-reducer.js","redux/redux-store.js","App.js","serviceWorker.js","index.js","common/FormsControls/FormsControls.module.css","assets/Images/empty_avatar.png","components/Pagination/Pagination.module.css","components/Friends/Friends.module.css"],"names":["module","exports","Preloader","props","alt","src","preloader","mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","initialState","dialogs","id","name","messages","message","dialogsReducer","action","type","body","newMessageBody","Textarea","input","meta","touched","error","hasError","className","classes","formControl","Input","fieldsCreator","placeholder","validate","component","text","Field","required","value","undefined","maxLength","max","length","DialogItem","path","dialog","Message","maxLength15","AddMessageReduxForm","reduxForm","form","handleSubmit","onSubmit","Dialogs","dialogsElements","dialogPage","map","messagesElements","dialogsItems","values","sendMessage","compose","dispatch","sendMessageBody","instance","require","default","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","response","data","delete","post","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","updateArray","items","itemId","objPropsName","newObjProps","u","FOLLOW","UNFOLLOW","users","totalUsersCount","isFetching","isFollowingInProgress","followSuccess","userId","unfollowSuccess","toggleIsFetching","toggleIsFollowingProgress","followUnfollowFunction","apiMethod","actionCreator","a","resultCode","usersReducer","followed","totalCount","filter","Pagination","totalItemsCount","onPageChanged","portionSize","pages","pagesCount","Math","ceil","i","push","portionCount","useState","portionNumber","setPortionNumber","leftBorder","rightBorder","pagination","onClick","p","cn","selectedPage","pageNumber","key","e","Friend","user","follow","unfollow","followingButtons","usersPhoto","photos","large","userPhoto","disabled","some","info","uniqueUrlName","Friends","getUsersSelector","createSelector","friendsPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getIsFollowingInProgress","FriendsContainer","getUsers","page","login","setAuthUserData","payload","authUser","authReducer","Header","logoutUser","header","logo","loginBlock","HeaderContainer","LoginReduxForm","formError","loginUser","stopSubmit","_error","Login","formData","Navbar","nav","activeClassName","activeLink","ADD_POST","posts","likesCount","profile","setStatus","profileReducer","newPost","newTextPost","Post","item","MyPostReduxForm","MyPosts","memo","addPost","PostElements","MyPostsContainer","profilePage","newPostText","ProfileStatusWithHooks","updateUserStatus","editMode","setEditMode","newStatus","useEffect","onChange","event","currentTarget","onBlur","autoFocus","onDoubleClick","ProfileInfo","descriptionBlock","fullName","Profile","ProfileContainer","match","params","authorizedId","getUserProfile","getUserStatus","withRouter","Timetable","Date","startDate","setStartDate","dateFormat","selected","locale","ru","minDate","date","withPortal","initialized","appReducer","createStore","combineReducers","applyMiddleware","store","app","formReducer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","thunkMiddleware","App","initializeApp","exact","render","DialogsContainer","AppContainer","promise","Promise","all","then","MainApp","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.d01a2446.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1erJH\",\"loginBlock\":\"Header_loginBlock__1h8lI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rememberMe\":\"Login_rememberMe__2A_gl\",\"Login\":\"Login_Login__jhmP2\",\"formError\":\"Login_formError__Fs5kN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"MyPosts_post__2L3jE\",\"item\":\"MyPosts_item__haUJ2\"};","module.exports = __webpack_public_path__ + \"static/media/loading.e8c852d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo2.fa112755.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1H06S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__27pwd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2p-R_\",\"items\":\"Navbar_items__37qNw\",\"activeLink\":\"Navbar_activeLink__KvDrO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__CvzjL\",\"dialog\":\"Dialogs_dialog__3Fpnc\",\"messages\":\"Dialogs_messages__14WKu\",\"dialogsItems\":\"Dialogs_dialogsItems__1eaGh\"};","import React from 'react';\r\nimport preloader from '../assets/Images/loading.svg';\r\n\r\nlet Preloader = (props) => {\r\n    return <img alt=\"\" src={preloader}/>\r\n};\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport {\r\n    connect\r\n} from 'react-redux';\r\nimport {\r\n    Redirect\r\n} from 'react-router-dom';\r\n\r\nlet mapStateToPropsRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to = \"/login\" / >\r\n                return <Component {\r\n                    ...this.props\r\n                }\r\n            />\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsRedirect)(RedirectComponent);\r\n}","const SEND_MESSAGE = 'dialogs/SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [{\r\n            id: 1,\r\n            name: \"Oleg\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Andrew\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Dashka\"\r\n        }\r\n\r\n    ],\r\n    messages: [{\r\n            id: 1,\r\n            message: \"hello\"\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"How are you?\"\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"Yo, mazafucka\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {\r\n                    id: 4,\r\n                    message: body\r\n                }]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageBody = (newMessageBody) => ({\r\n    type: SEND_MESSAGE,\r\n    newMessageBody\r\n})\r\n\r\nexport default dialogsReducer;","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport classes from './FormsControls.module.css'\r\n\r\nexport const Textarea = ({ input, meta: {touched, error}, ...props }) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={classes.formControl}>\r\n            <div className={hasError ? classes.error : \"\"}>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({ input, meta: {touched, error}, ...props }) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={classes.formControl}>\r\n            <div className={hasError ? classes.error : \"\"}>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            {hasError && <div>{error}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const fieldsCreator = (type={}, placeholder, name, validate, component, text =\"\") => \r\n    (<div>\r\n        <Field type={type} placeholder={placeholder} name={name} validate={validate} component={component}>\r\n            </Field> {text}\r\n    </div>)\r\n","export const required = value => value ? undefined : \"Field is required\"\r\nexport const maxLength = max => value => \r\nvalue && value.length > max ? `Must be ${max} characters or less` : undefined\r\n\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./../Dialogs.module.css\";\r\n\r\nconst DialogItem = ({id, name}) => {\r\n    let path = \"/dialogs/\" + id;\r\n    return <div className={classes.dialog}>\r\n        <img src=\"https://golos.ua/images/items/2020-08/02/CxJ6myL6cfYB26Mn/img_top.jpg\" alt=\"\"/>\r\n        <NavLink to={path}>{name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport classes from \"./../Dialogs.module.css\";\r\n\r\nconst Message = ({message}) => {\r\n    return <div className={classes.message}>{message}</div>\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport { maxLength, required } from \"../../utils/validators/validators\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\n\r\nconst maxLength15 = maxLength(10);\r\n\r\nconst AddMessageForm = (handleSubmit) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Enter your message\"} name={\"newMessageBody\"} validate={[required, maxLength15]} component={Textarea}></Field>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({ form: 'dialog' })(AddMessageForm)\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogPage.dialogs.map(dialog => <DialogItem name={dialog.name} id={dialog.id} />);\r\n    let messagesElements = props.dialogPage.messages.map(message => <Message message={message.message} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={classes.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageReduxForm onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../HOC/withAuthRedirect\";\r\nimport { sendMessageBody } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogPage: state.dialogPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageBody(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);;","const { default: Axios } = require(\"axios\");\r\n\r\nconst instance = Axios.create({\r\n  withCredentials: true,\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n  headers: {\r\n    \"API-KEY\": \"31fee8ec-76b8-413a-ab8d-1b886ccb58c6\",\r\n  },\r\n});\r\n\r\nexport const usersAPI = {\r\n  async getUsers(currentPage = 1, pageSize = 10) {\r\n    let response = await instance.get(\r\n      `users?page=${currentPage}&count=${pageSize}`\r\n    );\r\n    return response.data;\r\n  },\r\n  getProfile(id) {\r\n    console.warn(\"Use profileAPI\");\r\n    return profileAPI.getProfile(id);\r\n  },\r\n  async unfollow(id) {\r\n    let response = await instance.delete(`follow/${id}`);\r\n    return response.data;\r\n  },\r\n  async follow(id) {\r\n    let response = await instance.post(`follow/${id}`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport const profileAPI = {\r\n  async getProfile(id) {\r\n    let response = await instance.get(`profile/${id}`);\r\n    return response.data;\r\n  },\r\n  getStatus(id) {\r\n    return instance.get(`profile/status/${id}`);\r\n  },\r\n  updateStatus(status) {\r\n    return instance.put(`profile/status`, { status: status });\r\n  },\r\n};\r\n\r\nexport const authAPI = {\r\n  async getAuth() {\r\n    let response = await instance.get(`auth/me`);\r\n    return response.data;\r\n  },\r\n  async login(email, password, rememberMe = false) {\r\n    let response = await instance.post(`auth/login`, {\r\n      email,\r\n      password,\r\n      rememberMe,\r\n    });\r\n    return response.data;\r\n  },\r\n  async logout() {\r\n    let response = await instance.delete(`auth/login`);\r\n    return response.data;\r\n  },\r\n};","export const updateArray = (items, itemId, objPropsName, newObjProps) => {\r\n  return items.map((u) => {\r\n    if (u[objPropsName] === itemId) {\r\n      return { ...u, ...newObjProps };\r\n    }\r\n    return u;\r\n  });\r\n};\r\n","import { usersAPI } from \"../api/api\";\r\nimport { updateArray } from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = \"friends/FOLLOW\";\r\nconst UNFOLLOW = \"friends/UNFOLLOW\";\r\nconst SET_USERS = \"friends/SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"friends/SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_COUNT = \"friends/SET_TOTAL_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"friends/TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"friends/TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: true,\r\n  isFollowingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateArray(state.users, action.userId, \"id\", {followed: true})\r\n      };\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateArray(state.users, action.userId, \"id\", {followed: false})\r\n      };\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.users,\r\n      };\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage,\r\n      };\r\n    case SET_TOTAL_COUNT:\r\n      return {\r\n        ...state,\r\n        totalUsersCount: action.totalCount,\r\n      };\r\n    case TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      };\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n      return {\r\n        ...state,\r\n        isFollowingInProgress: action.isFollowingInProgress\r\n          ? [...state.isFollowingInProgress, action.userId]\r\n          : state.isFollowingInProgress.filter((id) => id !== action.userId),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({\r\n  type: FOLLOW,\r\n  userId,\r\n});\r\n\r\nexport const unfollowSuccess = (userId) => ({\r\n  type: UNFOLLOW,\r\n  userId,\r\n});\r\n\r\nexport const setUsers = (users) => ({\r\n  type: SET_USERS,\r\n  users,\r\n});\r\n\r\nexport const setCurrentPage = (currentPage) => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage,\r\n});\r\n\r\nexport const setTotalUsersCount = (totalCount) => ({\r\n  type: SET_TOTAL_COUNT,\r\n  totalCount,\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching,\r\n});\r\nexport const toggleIsFollowingProgress = (isFollowingInProgress, userId) => ({\r\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n  isFollowingInProgress,\r\n  userId,\r\n});\r\n\r\nexport const getUsers = (page, pageSize) => async (dispatch) => {\r\n  dispatch(toggleIsFetching(true));\r\n  dispatch(setCurrentPage(page));\r\n\r\n  let data = await usersAPI.getUsers(page, pageSize);\r\n  dispatch(toggleIsFetching(false));\r\n  dispatch(setUsers(data.items));\r\n  dispatch(setTotalUsersCount(data.totalCount));\r\n};\r\n\r\nconst followUnfollowFunction = async (dispatch, userId, apiMethod, actionCreator) => {\r\n  dispatch(toggleIsFollowingProgress(true, userId));\r\n  let data = await apiMethod(userId);\r\n  if (data.resultCode === 0) {\r\n    dispatch(actionCreator(userId));\r\n  }\r\n  dispatch(toggleIsFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => (dispatch) => {\r\n  followUnfollowFunction(dispatch, userId, usersAPI.follow, followSuccess);\r\n};\r\n\r\nexport const unfollow = (userId) => (dispatch) => {\r\n  followUnfollowFunction(dispatch, userId, usersAPI.unfollow, unfollowSuccess);  \r\n};\r\n\r\nexport default usersReducer;","import React, { useState } from 'react';\r\nimport cn from 'classnames';\r\nimport classes from './Pagination.module.css';\r\n\r\nlet Pagination = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\r\n    let pages = [];\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    for (let i = 0; i < pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    \r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftBorder = portionSize * (portionNumber - 1) + 1;\r\n    let rightBorder = portionSize * portionNumber;\r\n\r\n    return <div className={classes.pagination}>\r\n        {portionNumber > 1 && <button onClick={() => { setPortionNumber(portionNumber - 1) }}>Back</button>}\r\n        {pages.filter((p) => p >= leftBorder && p <= rightBorder)\r\n            .map(p => {\r\n                return <span className={cn({\r\n                    [classes.selectedPage]: currentPage === p\r\n                }, classes.pageNumber)}\r\n                    key={p}\r\n                    onClick={(e) => {\r\n                        onPageChanged(p);\r\n                    }}>{p}</span>\r\n            }\r\n            )}\r\n        {portionCount > portionNumber && <button onClick={() => { setPortionNumber(portionNumber + 1) }}>Next</button>}\r\n    </div>\r\n}\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport classes from './Friends.module.css';\r\nimport userPhoto from '../../assets/Images/empty_avatar.png';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Friend = ({ user, isFollowingInProgress, follow, unfollow }) => {\r\n    return <div>\r\n        <div className={classes.followingButtons}>\r\n            <div>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img alt=\"\" className={classes.usersPhoto} src={user.photos.large != null ? user.photos.large : userPhoto} />\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {user.followed\r\n                    ? <button disabled={isFollowingInProgress.some(id => id === user.id)} onClick={() => {\r\n                        unfollow(user.id)\r\n                    }}>Unfollow</button>\r\n\r\n                    : <button disabled={isFollowingInProgress.some(id => id === user.id)} onClick={() => {\r\n                        follow(user.id)\r\n                    }}>Follow</button>\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n        <div className={classes.info}>\r\n            <span>\r\n                <div>{user.name}</div>\r\n                <div>{user.status}</div>\r\n            </span>\r\n            <span>\r\n                <div>{user.id}</div>\r\n                <div>{user.uniqueUrlName}</div>\r\n            </span>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Friend;","import React from 'react';\r\nimport Pagination from '../Pagination/Pagination';\r\nimport Friend from './Friend';\r\n\r\nconst Friends = (props) => {\r\n    return <div>\r\n        <Pagination totalItemsCount={props.totalUsersCount}\r\n            pageSize={props.pageSize}\r\n            currentPage={props.currentPage}\r\n            onPageChanged={props.onPageChanged}\r\n        />\r\n\r\n        {props.users.map(u => <Friend key={u.id}\r\n            user={u}\r\n            isFollowingInProgress={props.isFollowingInProgress}\r\n            follow={props.follow} unfollow={props.unfollow} />\r\n        )\r\n        }\r\n\r\n    </div>\r\n}\r\n\r\nexport default Friends;","import { createSelector } from \"reselect\";\r\n\r\nconst getUsers = (state) => {\r\n    return state.friendsPage.users;\r\n}\r\nexport const getUsersSelector = createSelector(getUsers, (users) => {\r\n    return users;\r\n}) \r\nexport const getPageSize = (state) => {\r\n    return state.friendsPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.friendsPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.friendsPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.friendsPage.isFetching;\r\n}\r\nexport const getIsFollowingInProgress = (state) => {\r\n    return state.friendsPage.isFollowingInProgress;\r\n}\r\n\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { follow, unfollow, toggleIsFollowingProgress, getUsers } from \"../../redux/friends-reducer\";\r\nimport Friends from \"./Friends\";\r\nimport Preloader from '../../common/Preloader';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../HOC/withAuthRedirect';\r\nimport { getCurrentPage, getPageSize, getIsFetching, getIsFollowingInProgress, getTotalUsersCount, getUsersSelector } from '../../redux/friends-selectors';\r\n\r\nclass FriendsContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n    render() {\r\n        return <>\r\n            { this.props.isFetching ? <Preloader /> : null}\r\n            <Friends totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n                isFollowingInProgress={this.props.isFollowingInProgress}\r\n                toggleIsFollowingProgress={this.props.toggleIsFollowingProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        isFollowingInProgress: getIsFollowingInProgress(state)\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow, unfollow, toggleIsFollowingProgress, getUsers\r\n    }),\r\n    withAuthRedirect\r\n)(FriendsContainer);","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = \"auth/SET_USER_DATA\";\r\n\r\nlet initialState = {\r\n  id: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({\r\n  type: SET_USER_DATA,\r\n  payload: {\r\n    id,\r\n    email,\r\n    login,\r\n    isAuth,\r\n  },\r\n});\r\n\r\nexport const authUser = () => async (dispatch) => {\r\n    let data = await authAPI.getAuth();\r\n    if (data.resultCode === 0) {\r\n      let { id, email, login } = data.data;\r\n      dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n  };\r\n\r\nexport const loginUser = (email, password, rememberMe) => async (dispatch) => {\r\n  let data = await authAPI.login(email, password, rememberMe);\r\n  if (data.resultCode === 0) {\r\n    dispatch(authUser());\r\n  } else {\r\n    let message =\r\n      data.messages.length > 0 ? data.messages[0] : \"Something is wrong\";\r\n    dispatch(stopSubmit(\"login\", { _error: message }));\r\n  }\r\n};\r\n\r\nexport const logoutUser = (email, password, rememberMe) => async (dispatch) => {\r\n  let data = await authAPI.logout(email, password, rememberMe);\r\n  if (data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false));\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import React from \"react\";\r\nimport classes from './Header.module.css'\r\nimport logo from '../../assets/Images/logo2.png'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = ({isAuth, login, logoutUser}) => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <img alt=\"\" src={logo} />\r\n\r\n      <div className={classes.loginBlock}>\r\n        { isAuth \r\n        ? <div>{login} - <button onClick={logoutUser}>Log out</button></div> \r\n        : <NavLink to='/login'>Login</NavLink> }\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../redux/auth-reducer\";\r\nimport Header from \"./Header\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n  \r\n  render() {\r\n    return <Header {...this.props} />\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login\r\n})\r\nexport default connect(mapStateToProps, { logoutUser })(HeaderContainer);","import classes from './Login.module.css';\r\nimport React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { fieldsCreator, Input } from '../../common/FormsControls/FormsControls';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { connect } from 'react-redux';\r\nimport { loginUser } from '../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst LoginForm = ({handleSubmit, error, }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n                {fieldsCreator(\"text\", \"Email\", \"email\", [required], Input)}\r\n                {fieldsCreator(\"password\", \"Password\", \"password\", [required], Input)}\r\n                {fieldsCreator(\"checkbox\", null, \"rememberMe\", [], Input, \"remember me\")}\r\n                {error && <div className={classes.formError}>{error}</div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = ({loginUser, isAuth}) => {\r\n    const onSubmit = (formData) => {\r\n        loginUser(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    return <div>\r\n        {isAuth\r\n            ? <Redirect to={\"/profile\"} />\r\n            : <div className={classes.Login}>\r\n                <h1>Login</h1>\r\n                <LoginReduxForm onSubmit={onSubmit} />\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, { loginUser })(Login);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Navbar.module.css';\r\n\r\nconst Navbar = () => {\r\n    return <nav className={classes.nav}>\r\n    <ul>\r\n      <li><NavLink className={classes.items} to=\"/profile\" activeClassName={classes.activeLink}>\r\n        Профиль</NavLink></li>\r\n      <li><NavLink className={classes.items} to=\"/diary\" activeClassName={classes.activeLink}>\r\n        Дневник</NavLink></li>\r\n      <li><NavLink className={classes.items} to=\"/timetable\" activeClassName={classes.activeLink}>\r\n        Расписание</NavLink></li>\r\n      <li><NavLink className={classes.items} to=\"/dialogs\" activeClassName={classes.activeLink}>\r\n        Сообщения</NavLink></li>\r\n      <li><NavLink className={classes.items} to=\"/friends\" activeClassName={classes.activeLink}>\r\n        Друзья</NavLink></li> \r\n    </ul>\r\n  </nav>\r\n}\r\n\r\nexport default Navbar;","import { profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = \"profile/ADD_POST\";\r\nconst DELETE_POST = \"profile/DELETE_POST\";\r\nconst SET_USERS_PROFILE = \"profile/SET_USERS_PROFILE\";\r\nconst SET_STATUS = \"profile/SET_STATUS\";\r\n\r\nlet initialState = {\r\n  posts: [\r\n    {\r\n      id: 1,\r\n      message: \"hello\",\r\n      likesCount: 13,\r\n    },\r\n    {\r\n      id: 2,\r\n      message: \"How are you?\",\r\n      likesCount: 23,\r\n    },\r\n    {\r\n      id: 3,\r\n      message: \"Yo, mazafucka\",\r\n      likesCount: 13,\r\n    },\r\n  ],\r\n  profile: null,\r\n  status: \"\",\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      let newPost = {\r\n        id: 4,\r\n        message: action.newTextPost,\r\n        likesCount: 0,\r\n      };\r\n      return {\r\n        ...state,\r\n        posts: [newPost, ...state.posts],\r\n      };\r\n\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((p) => p.id !== action.id),\r\n      };\r\n\r\n    case SET_USERS_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.profile,\r\n      };\r\n\r\n    case SET_STATUS:\r\n      return {\r\n        ...state,\r\n        status: action.status,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addPost = (newTextPost) => ({\r\n  type: ADD_POST,\r\n  newTextPost,\r\n});\r\n\r\nexport const deletePost = (id) => ({\r\n  type: DELETE_POST,\r\n  id,\r\n});\r\n\r\nexport const setUsersProfile = (profile) => ({\r\n  type: SET_USERS_PROFILE,\r\n  profile,\r\n});\r\nexport const setStatus = (status) => ({\r\n  type: SET_STATUS,\r\n  status,\r\n});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  let data = await profileAPI.getProfile(userId);\r\n  dispatch(setUsersProfile(data));\r\n};\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n  let data = await profileAPI.getStatus(userId);\r\n  dispatch(setStatus(data.data));\r\n};\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n  let data = await profileAPI.updateStatus(status);\r\n  if (data.resultCode === 0) {\r\n    dispatch(setStatus(status));\r\n  }\r\n};\r\n\r\nexport default profileReducer;","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\n\r\nconst Post = ({message, likesCount}) => {\r\n  return (\r\n    <div className={classes.item}>\r\n      <img src=\"https://i.pinimg.com/236x/c2/af/09/c2af0941a9eace5f0ba3dc63284d3860--mr-bean-funny-color-blue.jpg\" alt=\"\" />\r\n      { message }\r\n      <div>\r\n        likes= { likesCount }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../../common/FormsControls/FormsControls\";\r\nimport { maxLength, required } from \"../../../utils/validators/validators\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst maxLength15 = maxLength(15);\r\n\r\nconst MyPostForm = (handleSubmit) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <Field placeholder={\"New post\"} name={\"post\"} component={Textarea} validate={[required, maxLength15]}></Field>\r\n      </div>\r\n      <div>\r\n        <button type=\"button\">Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\nconst MyPostReduxForm = reduxForm({ form: 'post' })(MyPostForm)\r\n\r\nconst MyPosts = React.memo(({posts, addPost}) => {\r\n  const PostElements =\r\n    posts.map(post => <Post message={post.message} likesCount={post.likesCount} />);\r\n\r\n  const addNewPost = (values) => {\r\n    addPost(values.post)\r\n  }\r\n\r\n    return (\r\n      <div className={classes.post}>\r\n        <h3>My Posts</h3>\r\n        <MyPostReduxForm onSubmit={addNewPost} />\r\n        <div className={classes.item}>\r\n          {PostElements}\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n})\r\n\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { addPost } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPost) => {\r\n      dispatch(addPost(newPost));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = ({status, updateUserStatus}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [newStatus, setStatus] = useState(status);\r\n\r\n    useEffect (() => {\r\n        setStatus(status);\r\n    }, [status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        updateUserStatus(newStatus);\r\n    }\r\n    \r\n    const onStatusChange = (event) => {\r\n        setStatus(event.currentTarget.value);\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? <div onDoubleClick={activateEditMode}>{status || \"No status\"}</div>\r\n                : < input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={newStatus} />\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport Preloader from \"../../../common/Preloader\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport userPhoto from \"../../../assets/Images/empty_avatar.png\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateUserStatus }) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={classes.descriptionBlock}>\r\n                <img alt=\"\" src={profile.photos.large != null ? profile.photos.large : userPhoto} />\r\n                <div>{profile.fullName}</div>\r\n                <ProfileStatusWithHooks status={status} updateUserStatus={updateUserStatus} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport MyPostsContainer from \"./My_Posts/MyPostsContainer\";\r\nimport ProfileInfo from \"./Profile_info/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile = {props.profile} status = {props.status} updateUserStatus = {props.updateUserStatus}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../HOC/withAuthRedirect\";\r\nimport { getUserProfile, getUserStatus, updateUserStatus } from \"../../redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedId;\r\n    };\r\n    this.props.getUserProfile(userId)\r\n    this.props.getUserStatus(userId)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateUserStatus={this.props.updateUserStatus}/>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedId: state.auth.id,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose (\r\n  connect(mapStateToProps, { getUserProfile, getUserStatus, updateUserStatus }),\r\n  withRouter,\r\n  withAuthRedirect\r\n) (ProfileContainer);\r\n","import React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport ru from 'date-fns/locale/ru';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"./Timetable.css\";\r\n\r\nexport const Timetable = () => {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  return (\r\n    <DatePicker className=\"calendar\"\r\n      dateFormat=\"dd/MM/yyyy\"\r\n      selected={startDate}\r\n      locale={ru}\r\n      minDate={new Date()}\r\n      onChange={date => setStartDate(date)}\r\n      withPortal />\r\n  );\r\n};","import { authUser } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\";\r\n\r\nlet initialState = {\r\n  initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\nexport const initializeApp = () => (dispatch) => {\r\n  let promise = dispatch(authUser());\r\n  Promise.all([promise])\r\n  .then(() => {\r\n    dispatch(initializedSuccess());\r\n  });\r\n};\r\n\r\nexport default appReducer;","import profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport usersReducer from \"./friends-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\nconst { createStore, combineReducers, applyMiddleware, compose } = require(\"redux\");\r\n\r\nlet reducers = combineReducers ({\r\n    profilePage: profileReducer,\r\n    dialogPage: dialogsReducer,\r\n    friendsPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers( applyMiddleware(thunkMiddleware) ) );\r\n\r\nexport default store;","import React from \"react\";\nimport { connect, Provider } from \"react-redux\";\nimport { BrowserRouter, Route, withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport \"./App.css\";\nimport Preloader from \"./common/Preloader\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport FriendsContainer from \"./components/Friends/FriendsContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport { Timetable } from \"./components/Timetable/Timetable\";\nimport { initializeApp } from \"./redux/app-reducer\";\nimport store from \"./redux/redux-store\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />;\n    }\n    return (\n      <div className=\"app-wrapper\">\n        <HeaderContainer />\n        <Navbar />\n        <div className=\"app-wrapper__content\">\n          <Route\n            exact\n            path=\"/profile/:userId?\"\n            render={() => <ProfileContainer />}\n          />\n\n          <Route exact path=\"/login\" render={() => <LoginPage />} />\n\n          <Route exact path=\"/diary\" render={() => <div>diary</div>} />\n\n          <Route exact path=\"/timetable\" render={() => <Timetable />} />\n\n          <Route exact path=\"/dialogs\" render={() => <DialogsContainer />} />\n\n          <Route exact path=\"/friends\" render={() => <FriendsContainer />} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized,\n});\n\nlet AppContainer = compose(\n  connect(mapStateToProps, { initializeApp }),\n  withRouter\n)(App);\n\nlet MainApp = (props) => {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </BrowserRouter>\n  );\n};\nexport default MainApp;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MainApp from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<MainApp />, document.getElementById(\"root\"));\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1sKz-\",\"error\":\"FormsControls_error__2NE2_\"};","module.exports = __webpack_public_path__ + \"static/media/empty_avatar.c7b5f6a0.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__3SglQ\",\"pageNumber\":\"Pagination_pageNumber__3QiKU\",\"selectedPage\":\"Pagination_selectedPage__sDTom\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPhoto\":\"Friends_usersPhoto__2Hgft\",\"info\":\"Friends_info__3ZjN4\",\"followingButtons\":\"Friends_followingButtons__1mHAj\"};"],"sourceRoot":""}